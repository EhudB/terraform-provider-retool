/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SourceControlTestDeployPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceControlTestDeployPostRequest{}

// SourceControlTestDeployPostRequest Parameters for running a deployment
type SourceControlTestDeployPostRequest struct {
	DeployParams SourceControlTestDeployPostRequestDeployParams `json:"deploy_params"`
}

type _SourceControlTestDeployPostRequest SourceControlTestDeployPostRequest

// NewSourceControlTestDeployPostRequest instantiates a new SourceControlTestDeployPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceControlTestDeployPostRequest(deployParams SourceControlTestDeployPostRequestDeployParams) *SourceControlTestDeployPostRequest {
	this := SourceControlTestDeployPostRequest{}
	this.DeployParams = deployParams
	return &this
}

// NewSourceControlTestDeployPostRequestWithDefaults instantiates a new SourceControlTestDeployPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceControlTestDeployPostRequestWithDefaults() *SourceControlTestDeployPostRequest {
	this := SourceControlTestDeployPostRequest{}
	return &this
}

// GetDeployParams returns the DeployParams field value
func (o *SourceControlTestDeployPostRequest) GetDeployParams() SourceControlTestDeployPostRequestDeployParams {
	if o == nil {
		var ret SourceControlTestDeployPostRequestDeployParams
		return ret
	}

	return o.DeployParams
}

// GetDeployParamsOk returns a tuple with the DeployParams field value
// and a boolean to check if the value has been set.
func (o *SourceControlTestDeployPostRequest) GetDeployParamsOk() (*SourceControlTestDeployPostRequestDeployParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployParams, true
}

// SetDeployParams sets field value
func (o *SourceControlTestDeployPostRequest) SetDeployParams(v SourceControlTestDeployPostRequestDeployParams) {
	o.DeployParams = v
}

func (o SourceControlTestDeployPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceControlTestDeployPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deploy_params"] = o.DeployParams
	return toSerialize, nil
}

func (o *SourceControlTestDeployPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deploy_params",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceControlTestDeployPostRequest := _SourceControlTestDeployPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSourceControlTestDeployPostRequest)

	if err != nil {
		return err
	}

	*o = SourceControlTestDeployPostRequest(varSourceControlTestDeployPostRequest)

	return err
}

type NullableSourceControlTestDeployPostRequest struct {
	value *SourceControlTestDeployPostRequest
	isSet bool
}

func (v NullableSourceControlTestDeployPostRequest) Get() *SourceControlTestDeployPostRequest {
	return v.value
}

func (v *NullableSourceControlTestDeployPostRequest) Set(val *SourceControlTestDeployPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceControlTestDeployPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceControlTestDeployPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceControlTestDeployPostRequest(val *SourceControlTestDeployPostRequest) *NullableSourceControlTestDeployPostRequest {
	return &NullableSourceControlTestDeployPostRequest{value: val, isSet: true}
}

func (v NullableSourceControlTestDeployPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceControlTestDeployPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


