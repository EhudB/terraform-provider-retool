/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SourceControlConfigGet200ResponseDataAnyOf4Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceControlConfigGet200ResponseDataAnyOf4Config{}

// SourceControlConfigGet200ResponseDataAnyOf4Config struct for SourceControlConfigGet200ResponseDataAnyOf4Config
type SourceControlConfigGet200ResponseDataAnyOf4Config struct {
	// Your base Azure URL. For Azure Cloud, this is always http://dev.azure.com. For Azure self-managed, this is the URL where your instance is hosted.
	Url string `json:"url"`
	// Your new or existing Azure DevOps project.
	Project string `json:"project"`
	// The Azure Repos username.
	User string `json:"user"`
	// The Azure project access tokens to authenticate to the Azure API.
	PersonalAccessToken string `json:"personal_access_token"`
	// Set this to true if you are using self-hosted Azure Repos.
	UseBasicAuth bool `json:"use_basic_auth"`
}

type _SourceControlConfigGet200ResponseDataAnyOf4Config SourceControlConfigGet200ResponseDataAnyOf4Config

// NewSourceControlConfigGet200ResponseDataAnyOf4Config instantiates a new SourceControlConfigGet200ResponseDataAnyOf4Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceControlConfigGet200ResponseDataAnyOf4Config(url string, project string, user string, personalAccessToken string, useBasicAuth bool) *SourceControlConfigGet200ResponseDataAnyOf4Config {
	this := SourceControlConfigGet200ResponseDataAnyOf4Config{}
	this.Url = url
	this.Project = project
	this.User = user
	this.PersonalAccessToken = personalAccessToken
	this.UseBasicAuth = useBasicAuth
	return &this
}

// NewSourceControlConfigGet200ResponseDataAnyOf4ConfigWithDefaults instantiates a new SourceControlConfigGet200ResponseDataAnyOf4Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceControlConfigGet200ResponseDataAnyOf4ConfigWithDefaults() *SourceControlConfigGet200ResponseDataAnyOf4Config {
	this := SourceControlConfigGet200ResponseDataAnyOf4Config{}
	return &this
}

// GetUrl returns the Url field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) SetUrl(v string) {
	o.Url = v
}

// GetProject returns the Project field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetProject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetProjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) SetProject(v string) {
	o.Project = v
}

// GetUser returns the User field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) SetUser(v string) {
	o.User = v
}

// GetPersonalAccessToken returns the PersonalAccessToken field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetPersonalAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PersonalAccessToken
}

// GetPersonalAccessTokenOk returns a tuple with the PersonalAccessToken field value
// and a boolean to check if the value has been set.
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetPersonalAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PersonalAccessToken, true
}

// SetPersonalAccessToken sets field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) SetPersonalAccessToken(v string) {
	o.PersonalAccessToken = v
}

// GetUseBasicAuth returns the UseBasicAuth field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetUseBasicAuth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseBasicAuth
}

// GetUseBasicAuthOk returns a tuple with the UseBasicAuth field value
// and a boolean to check if the value has been set.
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) GetUseBasicAuthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseBasicAuth, true
}

// SetUseBasicAuth sets field value
func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) SetUseBasicAuth(v bool) {
	o.UseBasicAuth = v
}

func (o SourceControlConfigGet200ResponseDataAnyOf4Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceControlConfigGet200ResponseDataAnyOf4Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["project"] = o.Project
	toSerialize["user"] = o.User
	toSerialize["personal_access_token"] = o.PersonalAccessToken
	toSerialize["use_basic_auth"] = o.UseBasicAuth
	return toSerialize, nil
}

func (o *SourceControlConfigGet200ResponseDataAnyOf4Config) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"project",
		"user",
		"personal_access_token",
		"use_basic_auth",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceControlConfigGet200ResponseDataAnyOf4Config := _SourceControlConfigGet200ResponseDataAnyOf4Config{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSourceControlConfigGet200ResponseDataAnyOf4Config)

	if err != nil {
		return err
	}

	*o = SourceControlConfigGet200ResponseDataAnyOf4Config(varSourceControlConfigGet200ResponseDataAnyOf4Config)

	return err
}

type NullableSourceControlConfigGet200ResponseDataAnyOf4Config struct {
	value *SourceControlConfigGet200ResponseDataAnyOf4Config
	isSet bool
}

func (v NullableSourceControlConfigGet200ResponseDataAnyOf4Config) Get() *SourceControlConfigGet200ResponseDataAnyOf4Config {
	return v.value
}

func (v *NullableSourceControlConfigGet200ResponseDataAnyOf4Config) Set(val *SourceControlConfigGet200ResponseDataAnyOf4Config) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceControlConfigGet200ResponseDataAnyOf4Config) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceControlConfigGet200ResponseDataAnyOf4Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceControlConfigGet200ResponseDataAnyOf4Config(val *SourceControlConfigGet200ResponseDataAnyOf4Config) *NullableSourceControlConfigGet200ResponseDataAnyOf4Config {
	return &NullableSourceControlConfigGet200ResponseDataAnyOf4Config{value: val, isSet: true}
}

func (v NullableSourceControlConfigGet200ResponseDataAnyOf4Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceControlConfigGet200ResponseDataAnyOf4Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


