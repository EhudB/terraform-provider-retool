/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PermissionsRevokePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionsRevokePostRequest{}

// PermissionsRevokePostRequest struct for PermissionsRevokePostRequest
type PermissionsRevokePostRequest struct {
	Subject PermissionsListObjectsPostRequestSubject `json:"subject"`
	Object PermissionsGrantPostRequestObject `json:"object"`
}

type _PermissionsRevokePostRequest PermissionsRevokePostRequest

// NewPermissionsRevokePostRequest instantiates a new PermissionsRevokePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionsRevokePostRequest(subject PermissionsListObjectsPostRequestSubject, object PermissionsGrantPostRequestObject) *PermissionsRevokePostRequest {
	this := PermissionsRevokePostRequest{}
	this.Subject = subject
	this.Object = object
	return &this
}

// NewPermissionsRevokePostRequestWithDefaults instantiates a new PermissionsRevokePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionsRevokePostRequestWithDefaults() *PermissionsRevokePostRequest {
	this := PermissionsRevokePostRequest{}
	return &this
}

// GetSubject returns the Subject field value
func (o *PermissionsRevokePostRequest) GetSubject() PermissionsListObjectsPostRequestSubject {
	if o == nil {
		var ret PermissionsListObjectsPostRequestSubject
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *PermissionsRevokePostRequest) GetSubjectOk() (*PermissionsListObjectsPostRequestSubject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *PermissionsRevokePostRequest) SetSubject(v PermissionsListObjectsPostRequestSubject) {
	o.Subject = v
}

// GetObject returns the Object field value
func (o *PermissionsRevokePostRequest) GetObject() PermissionsGrantPostRequestObject {
	if o == nil {
		var ret PermissionsGrantPostRequestObject
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *PermissionsRevokePostRequest) GetObjectOk() (*PermissionsGrantPostRequestObject, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *PermissionsRevokePostRequest) SetObject(v PermissionsGrantPostRequestObject) {
	o.Object = v
}

func (o PermissionsRevokePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionsRevokePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subject"] = o.Subject
	toSerialize["object"] = o.Object
	return toSerialize, nil
}

func (o *PermissionsRevokePostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subject",
		"object",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPermissionsRevokePostRequest := _PermissionsRevokePostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPermissionsRevokePostRequest)

	if err != nil {
		return err
	}

	*o = PermissionsRevokePostRequest(varPermissionsRevokePostRequest)

	return err
}

type NullablePermissionsRevokePostRequest struct {
	value *PermissionsRevokePostRequest
	isSet bool
}

func (v NullablePermissionsRevokePostRequest) Get() *PermissionsRevokePostRequest {
	return v.value
}

func (v *NullablePermissionsRevokePostRequest) Set(val *PermissionsRevokePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionsRevokePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionsRevokePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionsRevokePostRequest(val *PermissionsRevokePostRequest) *NullablePermissionsRevokePostRequest {
	return &NullablePermissionsRevokePostRequest{value: val, isSet: true}
}

func (v NullablePermissionsRevokePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionsRevokePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


