/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// SsoConfigPostRequestData - This object represents the SSO configuration for an organization or space. See https://docs.retool.com/sso for more information.
type SsoConfigPostRequestData struct {
	SsoConfigPostRequestDataOneOf *SsoConfigPostRequestDataOneOf
	SsoConfigPostRequestDataOneOf1 *SsoConfigPostRequestDataOneOf1
	SsoConfigPostRequestDataOneOf2 *SsoConfigPostRequestDataOneOf2
	SsoConfigPostRequestDataOneOf3 *SsoConfigPostRequestDataOneOf3
	SsoConfigPostRequestDataOneOf4 *SsoConfigPostRequestDataOneOf4
}

// SsoConfigPostRequestDataOneOfAsSsoConfigPostRequestData is a convenience function that returns SsoConfigPostRequestDataOneOf wrapped in SsoConfigPostRequestData
func SsoConfigPostRequestDataOneOfAsSsoConfigPostRequestData(v *SsoConfigPostRequestDataOneOf) SsoConfigPostRequestData {
	return SsoConfigPostRequestData{
		SsoConfigPostRequestDataOneOf: v,
	}
}

// SsoConfigPostRequestDataOneOf1AsSsoConfigPostRequestData is a convenience function that returns SsoConfigPostRequestDataOneOf1 wrapped in SsoConfigPostRequestData
func SsoConfigPostRequestDataOneOf1AsSsoConfigPostRequestData(v *SsoConfigPostRequestDataOneOf1) SsoConfigPostRequestData {
	return SsoConfigPostRequestData{
		SsoConfigPostRequestDataOneOf1: v,
	}
}

// SsoConfigPostRequestDataOneOf2AsSsoConfigPostRequestData is a convenience function that returns SsoConfigPostRequestDataOneOf2 wrapped in SsoConfigPostRequestData
func SsoConfigPostRequestDataOneOf2AsSsoConfigPostRequestData(v *SsoConfigPostRequestDataOneOf2) SsoConfigPostRequestData {
	return SsoConfigPostRequestData{
		SsoConfigPostRequestDataOneOf2: v,
	}
}

// SsoConfigPostRequestDataOneOf3AsSsoConfigPostRequestData is a convenience function that returns SsoConfigPostRequestDataOneOf3 wrapped in SsoConfigPostRequestData
func SsoConfigPostRequestDataOneOf3AsSsoConfigPostRequestData(v *SsoConfigPostRequestDataOneOf3) SsoConfigPostRequestData {
	return SsoConfigPostRequestData{
		SsoConfigPostRequestDataOneOf3: v,
	}
}

// SsoConfigPostRequestDataOneOf4AsSsoConfigPostRequestData is a convenience function that returns SsoConfigPostRequestDataOneOf4 wrapped in SsoConfigPostRequestData
func SsoConfigPostRequestDataOneOf4AsSsoConfigPostRequestData(v *SsoConfigPostRequestDataOneOf4) SsoConfigPostRequestData {
	return SsoConfigPostRequestData{
		SsoConfigPostRequestDataOneOf4: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SsoConfigPostRequestData) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SsoConfigPostRequestDataOneOf
	err = newStrictDecoder(data).Decode(&dst.SsoConfigPostRequestDataOneOf)
	if err == nil {
		jsonSsoConfigPostRequestDataOneOf, _ := json.Marshal(dst.SsoConfigPostRequestDataOneOf)
		if string(jsonSsoConfigPostRequestDataOneOf) == "{}" { // empty struct
			dst.SsoConfigPostRequestDataOneOf = nil
		} else {
			match++
		}
	} else {
		dst.SsoConfigPostRequestDataOneOf = nil
	}

	// try to unmarshal data into SsoConfigPostRequestDataOneOf1
	err = newStrictDecoder(data).Decode(&dst.SsoConfigPostRequestDataOneOf1)
	if err == nil {
		jsonSsoConfigPostRequestDataOneOf1, _ := json.Marshal(dst.SsoConfigPostRequestDataOneOf1)
		if string(jsonSsoConfigPostRequestDataOneOf1) == "{}" { // empty struct
			dst.SsoConfigPostRequestDataOneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.SsoConfigPostRequestDataOneOf1 = nil
	}

	// try to unmarshal data into SsoConfigPostRequestDataOneOf2
	err = newStrictDecoder(data).Decode(&dst.SsoConfigPostRequestDataOneOf2)
	if err == nil {
		jsonSsoConfigPostRequestDataOneOf2, _ := json.Marshal(dst.SsoConfigPostRequestDataOneOf2)
		if string(jsonSsoConfigPostRequestDataOneOf2) == "{}" { // empty struct
			dst.SsoConfigPostRequestDataOneOf2 = nil
		} else {
			match++
		}
	} else {
		dst.SsoConfigPostRequestDataOneOf2 = nil
	}

	// try to unmarshal data into SsoConfigPostRequestDataOneOf3
	err = newStrictDecoder(data).Decode(&dst.SsoConfigPostRequestDataOneOf3)
	if err == nil {
		jsonSsoConfigPostRequestDataOneOf3, _ := json.Marshal(dst.SsoConfigPostRequestDataOneOf3)
		if string(jsonSsoConfigPostRequestDataOneOf3) == "{}" { // empty struct
			dst.SsoConfigPostRequestDataOneOf3 = nil
		} else {
			match++
		}
	} else {
		dst.SsoConfigPostRequestDataOneOf3 = nil
	}

	// try to unmarshal data into SsoConfigPostRequestDataOneOf4
	err = newStrictDecoder(data).Decode(&dst.SsoConfigPostRequestDataOneOf4)
	if err == nil {
		jsonSsoConfigPostRequestDataOneOf4, _ := json.Marshal(dst.SsoConfigPostRequestDataOneOf4)
		if string(jsonSsoConfigPostRequestDataOneOf4) == "{}" { // empty struct
			dst.SsoConfigPostRequestDataOneOf4 = nil
		} else {
			match++
		}
	} else {
		dst.SsoConfigPostRequestDataOneOf4 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SsoConfigPostRequestDataOneOf = nil
		dst.SsoConfigPostRequestDataOneOf1 = nil
		dst.SsoConfigPostRequestDataOneOf2 = nil
		dst.SsoConfigPostRequestDataOneOf3 = nil
		dst.SsoConfigPostRequestDataOneOf4 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SsoConfigPostRequestData)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SsoConfigPostRequestData)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SsoConfigPostRequestData) MarshalJSON() ([]byte, error) {
	if src.SsoConfigPostRequestDataOneOf != nil {
		return json.Marshal(&src.SsoConfigPostRequestDataOneOf)
	}

	if src.SsoConfigPostRequestDataOneOf1 != nil {
		return json.Marshal(&src.SsoConfigPostRequestDataOneOf1)
	}

	if src.SsoConfigPostRequestDataOneOf2 != nil {
		return json.Marshal(&src.SsoConfigPostRequestDataOneOf2)
	}

	if src.SsoConfigPostRequestDataOneOf3 != nil {
		return json.Marshal(&src.SsoConfigPostRequestDataOneOf3)
	}

	if src.SsoConfigPostRequestDataOneOf4 != nil {
		return json.Marshal(&src.SsoConfigPostRequestDataOneOf4)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SsoConfigPostRequestData) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.SsoConfigPostRequestDataOneOf != nil {
		return obj.SsoConfigPostRequestDataOneOf
	}

	if obj.SsoConfigPostRequestDataOneOf1 != nil {
		return obj.SsoConfigPostRequestDataOneOf1
	}

	if obj.SsoConfigPostRequestDataOneOf2 != nil {
		return obj.SsoConfigPostRequestDataOneOf2
	}

	if obj.SsoConfigPostRequestDataOneOf3 != nil {
		return obj.SsoConfigPostRequestDataOneOf3
	}

	if obj.SsoConfigPostRequestDataOneOf4 != nil {
		return obj.SsoConfigPostRequestDataOneOf4
	}

	// all schemas are nil
	return nil
}

type NullableSsoConfigPostRequestData struct {
	value *SsoConfigPostRequestData
	isSet bool
}

func (v NullableSsoConfigPostRequestData) Get() *SsoConfigPostRequestData {
	return v.value
}

func (v *NullableSsoConfigPostRequestData) Set(val *SsoConfigPostRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableSsoConfigPostRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableSsoConfigPostRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSsoConfigPostRequestData(val *SsoConfigPostRequestData) *NullableSsoConfigPostRequestData {
	return &NullableSsoConfigPostRequestData{value: val, isSet: true}
}

func (v NullableSsoConfigPostRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSsoConfigPostRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


