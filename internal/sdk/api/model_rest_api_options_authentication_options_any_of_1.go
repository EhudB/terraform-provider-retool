/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestAPIOptionsAuthenticationOptionsAnyOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAPIOptionsAuthenticationOptionsAnyOf1{}

// RestAPIOptionsAuthenticationOptionsAnyOf1 struct for RestAPIOptionsAuthenticationOptionsAnyOf1
type RestAPIOptionsAuthenticationOptionsAnyOf1 struct {
	AuthenticationType string `json:"authentication_type"`
	AmazonAwsRegion string `json:"amazon_aws_region"`
	AmazonServiceName string `json:"amazon_service_name"`
	AmazonAccessKeyId string `json:"amazon_access_key_id"`
	AmazonSecretAccessKey string `json:"amazon_secret_access_key"`
	AuthWithDefaultCredentialProviderChain *bool `json:"auth_with_default_credential_provider_chain,omitempty"`
	EnableAwsv4AuthenticationViaHeaders *bool `json:"enable_awsv4_authentication_via_headers,omitempty"`
}

type _RestAPIOptionsAuthenticationOptionsAnyOf1 RestAPIOptionsAuthenticationOptionsAnyOf1

// NewRestAPIOptionsAuthenticationOptionsAnyOf1 instantiates a new RestAPIOptionsAuthenticationOptionsAnyOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAPIOptionsAuthenticationOptionsAnyOf1(authenticationType string, amazonAwsRegion string, amazonServiceName string, amazonAccessKeyId string, amazonSecretAccessKey string) *RestAPIOptionsAuthenticationOptionsAnyOf1 {
	this := RestAPIOptionsAuthenticationOptionsAnyOf1{}
	this.AuthenticationType = authenticationType
	this.AmazonAwsRegion = amazonAwsRegion
	this.AmazonServiceName = amazonServiceName
	this.AmazonAccessKeyId = amazonAccessKeyId
	this.AmazonSecretAccessKey = amazonSecretAccessKey
	return &this
}

// NewRestAPIOptionsAuthenticationOptionsAnyOf1WithDefaults instantiates a new RestAPIOptionsAuthenticationOptionsAnyOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAPIOptionsAuthenticationOptionsAnyOf1WithDefaults() *RestAPIOptionsAuthenticationOptionsAnyOf1 {
	this := RestAPIOptionsAuthenticationOptionsAnyOf1{}
	return &this
}

// GetAuthenticationType returns the AuthenticationType field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAuthenticationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationType, true
}

// SetAuthenticationType sets field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) SetAuthenticationType(v string) {
	o.AuthenticationType = v
}

// GetAmazonAwsRegion returns the AmazonAwsRegion field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonAwsRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonAwsRegion
}

// GetAmazonAwsRegionOk returns a tuple with the AmazonAwsRegion field value
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonAwsRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmazonAwsRegion, true
}

// SetAmazonAwsRegion sets field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) SetAmazonAwsRegion(v string) {
	o.AmazonAwsRegion = v
}

// GetAmazonServiceName returns the AmazonServiceName field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonServiceName
}

// GetAmazonServiceNameOk returns a tuple with the AmazonServiceName field value
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonServiceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmazonServiceName, true
}

// SetAmazonServiceName sets field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) SetAmazonServiceName(v string) {
	o.AmazonServiceName = v
}

// GetAmazonAccessKeyId returns the AmazonAccessKeyId field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonAccessKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonAccessKeyId
}

// GetAmazonAccessKeyIdOk returns a tuple with the AmazonAccessKeyId field value
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmazonAccessKeyId, true
}

// SetAmazonAccessKeyId sets field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) SetAmazonAccessKeyId(v string) {
	o.AmazonAccessKeyId = v
}

// GetAmazonSecretAccessKey returns the AmazonSecretAccessKey field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonSecretAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonSecretAccessKey
}

// GetAmazonSecretAccessKeyOk returns a tuple with the AmazonSecretAccessKey field value
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAmazonSecretAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmazonSecretAccessKey, true
}

// SetAmazonSecretAccessKey sets field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) SetAmazonSecretAccessKey(v string) {
	o.AmazonSecretAccessKey = v
}

// GetAuthWithDefaultCredentialProviderChain returns the AuthWithDefaultCredentialProviderChain field value if set, zero value otherwise.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAuthWithDefaultCredentialProviderChain() bool {
	if o == nil || IsNil(o.AuthWithDefaultCredentialProviderChain) {
		var ret bool
		return ret
	}
	return *o.AuthWithDefaultCredentialProviderChain
}

// GetAuthWithDefaultCredentialProviderChainOk returns a tuple with the AuthWithDefaultCredentialProviderChain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetAuthWithDefaultCredentialProviderChainOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthWithDefaultCredentialProviderChain) {
		return nil, false
	}
	return o.AuthWithDefaultCredentialProviderChain, true
}

// HasAuthWithDefaultCredentialProviderChain returns a boolean if a field has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) HasAuthWithDefaultCredentialProviderChain() bool {
	if o != nil && !IsNil(o.AuthWithDefaultCredentialProviderChain) {
		return true
	}

	return false
}

// SetAuthWithDefaultCredentialProviderChain gets a reference to the given bool and assigns it to the AuthWithDefaultCredentialProviderChain field.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) SetAuthWithDefaultCredentialProviderChain(v bool) {
	o.AuthWithDefaultCredentialProviderChain = &v
}

// GetEnableAwsv4AuthenticationViaHeaders returns the EnableAwsv4AuthenticationViaHeaders field value if set, zero value otherwise.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetEnableAwsv4AuthenticationViaHeaders() bool {
	if o == nil || IsNil(o.EnableAwsv4AuthenticationViaHeaders) {
		var ret bool
		return ret
	}
	return *o.EnableAwsv4AuthenticationViaHeaders
}

// GetEnableAwsv4AuthenticationViaHeadersOk returns a tuple with the EnableAwsv4AuthenticationViaHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) GetEnableAwsv4AuthenticationViaHeadersOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableAwsv4AuthenticationViaHeaders) {
		return nil, false
	}
	return o.EnableAwsv4AuthenticationViaHeaders, true
}

// HasEnableAwsv4AuthenticationViaHeaders returns a boolean if a field has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) HasEnableAwsv4AuthenticationViaHeaders() bool {
	if o != nil && !IsNil(o.EnableAwsv4AuthenticationViaHeaders) {
		return true
	}

	return false
}

// SetEnableAwsv4AuthenticationViaHeaders gets a reference to the given bool and assigns it to the EnableAwsv4AuthenticationViaHeaders field.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) SetEnableAwsv4AuthenticationViaHeaders(v bool) {
	o.EnableAwsv4AuthenticationViaHeaders = &v
}

func (o RestAPIOptionsAuthenticationOptionsAnyOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAPIOptionsAuthenticationOptionsAnyOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authentication_type"] = o.AuthenticationType
	toSerialize["amazon_aws_region"] = o.AmazonAwsRegion
	toSerialize["amazon_service_name"] = o.AmazonServiceName
	toSerialize["amazon_access_key_id"] = o.AmazonAccessKeyId
	toSerialize["amazon_secret_access_key"] = o.AmazonSecretAccessKey
	if !IsNil(o.AuthWithDefaultCredentialProviderChain) {
		toSerialize["auth_with_default_credential_provider_chain"] = o.AuthWithDefaultCredentialProviderChain
	}
	if !IsNil(o.EnableAwsv4AuthenticationViaHeaders) {
		toSerialize["enable_awsv4_authentication_via_headers"] = o.EnableAwsv4AuthenticationViaHeaders
	}
	return toSerialize, nil
}

func (o *RestAPIOptionsAuthenticationOptionsAnyOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authentication_type",
		"amazon_aws_region",
		"amazon_service_name",
		"amazon_access_key_id",
		"amazon_secret_access_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestAPIOptionsAuthenticationOptionsAnyOf1 := _RestAPIOptionsAuthenticationOptionsAnyOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestAPIOptionsAuthenticationOptionsAnyOf1)

	if err != nil {
		return err
	}

	*o = RestAPIOptionsAuthenticationOptionsAnyOf1(varRestAPIOptionsAuthenticationOptionsAnyOf1)

	return err
}

type NullableRestAPIOptionsAuthenticationOptionsAnyOf1 struct {
	value *RestAPIOptionsAuthenticationOptionsAnyOf1
	isSet bool
}

func (v NullableRestAPIOptionsAuthenticationOptionsAnyOf1) Get() *RestAPIOptionsAuthenticationOptionsAnyOf1 {
	return v.value
}

func (v *NullableRestAPIOptionsAuthenticationOptionsAnyOf1) Set(val *RestAPIOptionsAuthenticationOptionsAnyOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAPIOptionsAuthenticationOptionsAnyOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAPIOptionsAuthenticationOptionsAnyOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAPIOptionsAuthenticationOptionsAnyOf1(val *RestAPIOptionsAuthenticationOptionsAnyOf1) *NullableRestAPIOptionsAuthenticationOptionsAnyOf1 {
	return &NullableRestAPIOptionsAuthenticationOptionsAnyOf1{value: val, isSet: true}
}

func (v NullableRestAPIOptionsAuthenticationOptionsAnyOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAPIOptionsAuthenticationOptionsAnyOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


