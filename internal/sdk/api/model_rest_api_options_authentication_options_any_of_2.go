/*
Retool API

Go to Settings > API to get started. Once you generate an API token, use bearer token authentication to make requests.

API version: 2.4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestAPIOptionsAuthenticationOptionsAnyOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAPIOptionsAuthenticationOptionsAnyOf2{}

// RestAPIOptionsAuthenticationOptionsAnyOf2 struct for RestAPIOptionsAuthenticationOptionsAnyOf2
type RestAPIOptionsAuthenticationOptionsAnyOf2 struct {
	AuthenticationType string `json:"authentication_type"`
	BasicUsername string `json:"basic_username"`
	BasicPassword *string `json:"basic_password,omitempty"`
}

type _RestAPIOptionsAuthenticationOptionsAnyOf2 RestAPIOptionsAuthenticationOptionsAnyOf2

// NewRestAPIOptionsAuthenticationOptionsAnyOf2 instantiates a new RestAPIOptionsAuthenticationOptionsAnyOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAPIOptionsAuthenticationOptionsAnyOf2(authenticationType string, basicUsername string) *RestAPIOptionsAuthenticationOptionsAnyOf2 {
	this := RestAPIOptionsAuthenticationOptionsAnyOf2{}
	this.AuthenticationType = authenticationType
	this.BasicUsername = basicUsername
	return &this
}

// NewRestAPIOptionsAuthenticationOptionsAnyOf2WithDefaults instantiates a new RestAPIOptionsAuthenticationOptionsAnyOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAPIOptionsAuthenticationOptionsAnyOf2WithDefaults() *RestAPIOptionsAuthenticationOptionsAnyOf2 {
	this := RestAPIOptionsAuthenticationOptionsAnyOf2{}
	return &this
}

// GetAuthenticationType returns the AuthenticationType field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) GetAuthenticationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) GetAuthenticationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthenticationType, true
}

// SetAuthenticationType sets field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) SetAuthenticationType(v string) {
	o.AuthenticationType = v
}

// GetBasicUsername returns the BasicUsername field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) GetBasicUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BasicUsername
}

// GetBasicUsernameOk returns a tuple with the BasicUsername field value
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) GetBasicUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BasicUsername, true
}

// SetBasicUsername sets field value
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) SetBasicUsername(v string) {
	o.BasicUsername = v
}

// GetBasicPassword returns the BasicPassword field value if set, zero value otherwise.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) GetBasicPassword() string {
	if o == nil || IsNil(o.BasicPassword) {
		var ret string
		return ret
	}
	return *o.BasicPassword
}

// GetBasicPasswordOk returns a tuple with the BasicPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) GetBasicPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BasicPassword) {
		return nil, false
	}
	return o.BasicPassword, true
}

// HasBasicPassword returns a boolean if a field has been set.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) HasBasicPassword() bool {
	if o != nil && !IsNil(o.BasicPassword) {
		return true
	}

	return false
}

// SetBasicPassword gets a reference to the given string and assigns it to the BasicPassword field.
func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) SetBasicPassword(v string) {
	o.BasicPassword = &v
}

func (o RestAPIOptionsAuthenticationOptionsAnyOf2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAPIOptionsAuthenticationOptionsAnyOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authentication_type"] = o.AuthenticationType
	toSerialize["basic_username"] = o.BasicUsername
	if !IsNil(o.BasicPassword) {
		toSerialize["basic_password"] = o.BasicPassword
	}
	return toSerialize, nil
}

func (o *RestAPIOptionsAuthenticationOptionsAnyOf2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authentication_type",
		"basic_username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestAPIOptionsAuthenticationOptionsAnyOf2 := _RestAPIOptionsAuthenticationOptionsAnyOf2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestAPIOptionsAuthenticationOptionsAnyOf2)

	if err != nil {
		return err
	}

	*o = RestAPIOptionsAuthenticationOptionsAnyOf2(varRestAPIOptionsAuthenticationOptionsAnyOf2)

	return err
}

type NullableRestAPIOptionsAuthenticationOptionsAnyOf2 struct {
	value *RestAPIOptionsAuthenticationOptionsAnyOf2
	isSet bool
}

func (v NullableRestAPIOptionsAuthenticationOptionsAnyOf2) Get() *RestAPIOptionsAuthenticationOptionsAnyOf2 {
	return v.value
}

func (v *NullableRestAPIOptionsAuthenticationOptionsAnyOf2) Set(val *RestAPIOptionsAuthenticationOptionsAnyOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAPIOptionsAuthenticationOptionsAnyOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAPIOptionsAuthenticationOptionsAnyOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAPIOptionsAuthenticationOptionsAnyOf2(val *RestAPIOptionsAuthenticationOptionsAnyOf2) *NullableRestAPIOptionsAuthenticationOptionsAnyOf2 {
	return &NullableRestAPIOptionsAuthenticationOptionsAnyOf2{value: val, isSet: true}
}

func (v NullableRestAPIOptionsAuthenticationOptionsAnyOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAPIOptionsAuthenticationOptionsAnyOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


